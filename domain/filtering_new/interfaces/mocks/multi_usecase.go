// Code generated by mockery v2.10.0. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	request "los-kmb-api/models/request"

	response "los-kmb-api/models/response"
)

// MultiUsecase is an autogenerated mock type for the MultiUsecase type
type MultiUsecase struct {
	mock.Mock
}

// Filtering provides a mock function with given fields: ctx, reqFiltering, married, accessToken, hrisAccessToken
func (_m *MultiUsecase) Filtering(ctx context.Context, reqFiltering request.Filtering, married bool, accessToken string, hrisAccessToken string) (response.Filtering, error) {
	ret := _m.Called(ctx, reqFiltering, married, accessToken, hrisAccessToken)

	var r0 response.Filtering
	if rf, ok := ret.Get(0).(func(context.Context, request.Filtering, bool, string, string) response.Filtering); ok {
		r0 = rf(ctx, reqFiltering, married, accessToken, hrisAccessToken)
	} else {
		r0 = ret.Get(0).(response.Filtering)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, request.Filtering, bool, string, string) error); ok {
		r1 = rf(ctx, reqFiltering, married, accessToken, hrisAccessToken)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
