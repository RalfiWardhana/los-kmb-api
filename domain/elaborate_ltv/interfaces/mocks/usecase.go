// Code generated by mockery v2.10.0. DO NOT EDIT.

package mocks

import (
	context "context"
	auth "los-kmb-api/models/auth"

	mock "github.com/stretchr/testify/mock"

	request "los-kmb-api/models/request"

	response "los-kmb-api/models/response"
)

// Usecase is an autogenerated mock type for the Usecase type
type Usecase struct {
	mock.Mock
}

// Authorization provides a mock function with given fields: header
func (_m *Usecase) Authorization(header auth.Auth) error {
	ret := _m.Called(header)

	var r0 error
	if rf, ok := ret.Get(0).(func(auth.Auth) error); ok {
		r0 = rf(header)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Elaborate provides a mock function with given fields: ctx, reqs, accessToken
func (_m *Usecase) Elaborate(ctx context.Context, reqs request.ElaborateLTV, accessToken string) (response.ElaborateLTV, error) {
	ret := _m.Called(ctx, reqs, accessToken)

	var r0 response.ElaborateLTV
	if rf, ok := ret.Get(0).(func(context.Context, request.ElaborateLTV, string) response.ElaborateLTV); ok {
		r0 = rf(ctx, reqs, accessToken)
	} else {
		r0 = ret.Get(0).(response.ElaborateLTV)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, request.ElaborateLTV, string) error); ok {
		r1 = rf(ctx, reqs, accessToken)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
