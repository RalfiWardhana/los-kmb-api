// Code generated by mockery v2.15.0. DO NOT EDIT.

package mocks

import (
	context "context"

	event "github.com/KB-FMF/platform-library/event"
	mock "github.com/stretchr/testify/mock"
)

// EventMiddlewareFunc is an autogenerated mock type for the EventMiddlewareFunc type
type EventMiddlewareFunc struct {
	mock.Mock
}

// Execute provides a mock function with given fields: next
func (_m *EventMiddlewareFunc) Execute(next func(context.Context, event.Event) error) func(context.Context, event.Event) error {
	ret := _m.Called(next)

	var r0 func(context.Context, event.Event) error
	if rf, ok := ret.Get(0).(func(func(context.Context, event.Event) error) func(context.Context, event.Event) error); ok {
		r0 = rf(next)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(func(context.Context, event.Event) error)
		}
	}

	return r0
}

type mockConstructorTestingTNewEventMiddlewareFunc interface {
	mock.TestingT
	Cleanup(func())
}

// NewEventMiddlewareFunc creates a new instance of EventMiddlewareFunc. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewEventMiddlewareFunc(t mockConstructorTestingTNewEventMiddlewareFunc) *EventMiddlewareFunc {
	mock := &EventMiddlewareFunc{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
